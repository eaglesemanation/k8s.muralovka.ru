serviceAnnotations:
  external-dns.alpha.kubernetes.io/hostname: minecraft.muralovka.ru
  metallb.universe.tf/allow-shared-ip: minecraft-proxy

securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

minecraftProxy:
  type: VELOCITY
  plugins:
    - https://ci.opencollab.dev/job/GeyserMC/job/Geyser/job/master/lastSuccessfulBuild/artifact/bootstrap/velocity/target/Geyser-Velocity.jar
    - https://dev.bukkit.org/projects/advanced-portals/files/latest
    - https://ci.lucko.me/job/LuckPerms/1417/artifact/velocity/build/libs/LuckPerms-Velocity-5.4.9.jar
    - https://github.com/SkinsRestorer/SkinsRestorerX/releases/download/14.1.13/SkinsRestorer.jar
  velocityVersion: 3.1.2-SNAPSHOT
  onlineMode: false
  serviceType: LoadBalancer
  externalTrafficPolicy: Local
  extraPorts:
    - name: bedrock
      containerPort: 19132
      protocol: UDP
      service:
        enabled: true
        type: LoadBalancer
        externalTrafficPolicy: Local
        port: 19132
        annotations:
          metallb.universe.tf/allow-shared-ip: minecraft-proxy
      ingress:
        enabled: false

extraVolumes:
  - volumeMounts:
      - name: config
        mountPath: /server/plugins/Geyser-Velocity/config.yml
        subPath: geyser-config.yaml
      - name: config
        mountPath: /server/plugins/skinrestorer/config.yml
        subPath: skinrestorer.yaml
    volumes:
      - name: config
        configMap:
          name: proxy-config
      - name: common-secrets
        secret:
          secretName: common-secrets

initContainers:
  - name: mkdir-plugins
    image: busybox
    command: 
      - sh
      - -c
      - |-
        for pluginName in Geyser-Velocity skinrestorer; do
          mkdir -p /server/plugins/$pluginName
        done
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
    volumeMounts:
      - name: datadir
        mountPath: /server

  # FIXME: Mount velocity config to be mountable instead of copying it
  - name: cp-velocity-conf
    image: busybox
    command: ['sh', '-c', 'cp /conf/velocity.toml /server/velocity.toml']
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
    volumeMounts:
      - name: datadir
        mountPath: /server
      - name: config
        mountPath: /conf/velocity.toml
        subPath: velocity.toml
